import React, { Component, findDOMNode } from 'react';

import FormattedDate from './FormattedDate';
import Builder from './Builder';
import ReferenceTable from './ReferenceTable';

import '../styles/index.css';

import referenceEntries from 'json!../reference.json';

const supportedCodes = referenceEntries.map(entry => `%${entry.code}`);

export default class App extends Component {
  state = {
    hasJS: false
  }

  componentDidMount() {
    this.setState({ hasJS: true });
  }

  render() {
    const ribbonStyle = {
      position: 'absolute',
      top: 0,
      right: 0,
      border: 0
    };

    // Do not include props generated by static-site-generator-webpack-plugin
    const { path, assets, webpackStats, ...otherProps } = this.props;
    const initialProps = JSON.stringify(otherProps);

    const date = new Date(this.props.date);

    return (
      <html>
        <head>
          <meta charSet='utf-8' />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <title>Strftime Helper</title>
          <link type='text/css' rel='stylesheet' href='/index.css' />
          {
            this.props.isProduction ? null :
              <script src="http://localhost:8080/webpack-dev-server.js"></script>
          }
          <script
            id='props'
            type='application/json'
            dangerouslySetInnerHTML={{__html: initialProps}}
          />
        </head>
        <body>
          <h1 className='page-title'>Strftime Helper</h1>
          {
            this.state.hasJS ?
              <div className='section section--full'>
                <Builder
                  value={this.props.format}
                  supportedCodes={supportedCodes}
                  date={date}
                />
              </div>
              : null
          }
          <div className='section'>
            <ReferenceTable entries={referenceEntries} date={date} />
          </div>
          <a href="https://github.com/TimPetricola/strftime">
            <img
              style={ribbonStyle}
              src="https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"
            />
          </a>
          <script src='/bundle.js'></script>
        </body>
      </html>
    );
  }
}
