import React, { Component, findDOMNode } from 'react';

import FormattedDate from './FormattedDate';
import Repl from './Repl';
import ReferenceTable from './ReferenceTable';

import '../styles/index.css';

import referenceEntries from 'json!../reference.json';

const supportedCodes = referenceEntries.map(entry => `%${entry.code}`);

export default class App extends Component {
  state = {
    hasRepl: false,
    bodyPaddingBottom: 0
  }

  componentDidMount() {
    this.setState({ hasRepl: true });
  }

  componentDidUpdate(prevProps, prevState) {
    if (prevState.hasRepl !== this.state.hasRepl) {
      const repl = this.refs.repl;
      const padding = repl ? findDOMNode(repl).offsetHeight : 0;
      this.setState({ bodyPaddingBottom: padding });
    }
  }

  render() {
    // Do not include props generated by static-site-generator-webpack-plugin
    const { path, assets, webpackStats, ...otherProps } = this.props;
    const initialProps = JSON.stringify(otherProps);

    const date = new Date(this.props.date);

    return (
      <html>
        <head>
          <meta charSet='utf-8' />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <title>strftime reference</title>
          <link type='text/css' rel='stylesheet' href='/bundle.css' />
          {
            this.props.isProduction ? null :
              <script src="http://localhost:8080/webpack-dev-server.js"></script>
          }
          <link href='https://fonts.googleapis.com/css?family=Roboto:300,400' rel='stylesheet' type='text/css' />
          <link href='https://fonts.googleapis.com/css?family=Roboto+Mono' rel='stylesheet' type='text/css' />
          <script
            id='props'
            type='application/json'
            dangerouslySetInnerHTML={{__html: initialProps}}
          />
        </head>
        <body style={{ paddingBottom: this.state.bodyPaddingBottom }}>
          <header className='page-head'>
            <h1 className='page-title'>strftime reference</h1>
            {' '}
            <p className='credits'>by <a href='http://timpetricola.com'>Tim Petricola</a> on <a href='https://github.com/TimPetricola/strftime'>GitHub</a></p>
          </header>
          {
            this.state.hasRepl ?
              <div className='repl-container' ref='repl'>
                <Repl
                  value={this.props.format}
                  supportedCodes={supportedCodes}
                  date={date}
                />
              </div>
              : null
          }
          <ReferenceTable entries={referenceEntries} date={date} />
          <script src='/bundle.js'></script>
        </body>
      </html>
    );
  }
}
